name: build

on:
  push:
    paths-ignore:
      - 'examples/**'
      - 'README.md'
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        mkdir all-Mini-LM-L6-v2_onnx
        cd all-Mini-LM-L6-v2_onnx && wget https://huggingface.co/sentence-transformers/all-MiniLM-L6-v2/resolve/main/config.json
        wget https://huggingface.co/sentence-transformers/all-MiniLM-L6-v2/resolve/main/onnx/model.onnx
        wget https://huggingface.co/sentence-transformers/all-MiniLM-L6-v2/resolve/main/special_tokens_map.json
        wget https://huggingface.co/sentence-transformers/all-MiniLM-L6-v2/resolve/main/tokenizer_config.json
        wget https://huggingface.co/sentence-transformers/all-MiniLM-L6-v2/resolve/main/tokenizer.json
        wget https://huggingface.co/sentence-transformers/all-MiniLM-L6-v2/resolve/main/vocab.txt
    - name: build and clippy
      run: cargo build && cargo clippy
    - name: database test
      run: |
        export LMDB_USER=$USER
        RUST_LOG=DEBUG cargo test database::tests::environment_test -- --exact
    - name: etl test
      run: |
        export LMDB_USER=$USER
        ONNX_PARALLEL_THREADS=2
        cargo test embeddings::tests::cosine_etl_test -- --exact
